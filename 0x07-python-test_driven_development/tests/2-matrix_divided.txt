==============================
Tests executed with: python3 -m doctest -v ./tests/2-matrix_divided.txt
==============================

Function that divides all elements of a matrix.

First import method 'matrix_divided'
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided


Test cases:

Basic usage; division with ints and floats:
    >>> matrix = [[1, 2, 3], [4, 5, 6.7]]
    >>> matrix_divided(matrix, 5)
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.34]]

    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.35]]

    >>> matrix_divided(matrix, 2.934)
    [[0.34, 0.68, 1.02], [1.36, 1.7, 2.28]]

Division with a string:
    >>> matrix_divided(matrix, "fifteen")
    Traceback (most recent call last):
      ...
    TypeError: div must be a number

Division by zero (0):
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
      ...
    ZeroDivisionError: division by zero

Division while missing some or all parameters:
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided(4)
    Traceback (most recent call last):
      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
      ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Division with the wrong type (eg with list or tuple):
    >>> matrix_divided(matrix, (2, 3))
    Traceback (most recent call last):
      ...
    TypeError: div must be a number

    >>> matrix_divided(matrix, [2, 3])
    Traceback (most recent call last):
      ...
    TypeError: div must be a number

Division when rows are of different sizes:
    >>> matrix_divided([[1, 2], [4, 5, 6]], 4)
    Traceback (most recent call last):
      ...
    TypeError: Each row of the matrix must have the same size

Division when matrix is empty:
    >>> matrix = []
    >>> matrix_divided(matrix, 5)
    []
