==============================
Tests executed with: python3 -m doctest -v ./tests/101-lazy_matrix_mul.txt 
==============================

Function multiplies 2 matrices by using the module NumPy.

First import method 'lazy_matrix_mul'
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


Test cases:

Basic usage, same-sized matrices with positive or negative ints and floats:

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[2, 0], [1, 2]]
    >>> lazy_matrix_mul(m_a, m_b)
    [[4, 4], [10, 8]]

    >>> m_a = [[5, 2], [4, 9]]
    >>> m_b = [[2, 3], [10, 12]]
    >>> lazy_matrix_mul(m_a, m_b)
    [[30, 39], [98, 120]]

    >>> m_a = [[-5.1, 2.3], [4.5, -9.4]]
    >>> m_b = [[2, -3], [-10.49, 12.7]]
    >>> lazy_matrix_mul(m_a, m_b)
    [[-34.327, 44.51], [107.60600000000001, -132.88]]

Multiplication given empty matrices either:
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'  

    >>> lazy_matrix_mul(m_a)
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b' 

    >>> m_a = [[]]
    >>> m_b = [[2, -3], [-10.49, 12.7]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      ...
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0) 

    >>> m_a = [[-5.1, 2.3], [4.5, -9.4]]
    >>> m_b = []
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      ...
    ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0) 

Multiplication given different sized matrices:
    >>> m_a = [[-5, 23], [4, 5, -9.4]]
    >>> m_b = [[2, -3], [-10, 12]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      ...
    ValueError: setting an array element with a sequence. 

    >>> m_a = [[2, -3], [-10, 12]]
    >>> m_b = [[-5, 23], [4, 5, -9.4]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      ...
    ValueError: setting an array element with a sequence.

Multiplication given other data types:
    >>> m_a = [["brown", "fox"], [-10, 12]]
    >>> m_b = [[2, -3], [-10, 12]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      ...
    ValueError: data type must provide an itemsize  

    >>> m_a = [[2, -3], [-10, 12]]
    >>> m_b = [[-5, 23], ["7", 8]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
     ...
    ValueError: data type must provide an itemsize 


    >>> lazy_matrix_mul([[1, "brown"]], [[{"fox": 18}, 6.35]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0) 


Multiplication when row count of one matrix not equal to column count of other:
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [2, 3], [4, 5]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      ...
    ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0) 
        
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [2, 3, 4]]
    >>> lazy_matrix_mul(m_a, m_b)    
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    ...    
    ValueError: setting an array element with a sequence.     
        
    
    
    
